// Generated by CoffeeScript 1.3.3
(function() {
  var $cached, ENDPOINT, MAX_INDEX, MIN_INDEX, MOCK_PRODUCT, SCREEN_WIDTH, cacheSelectors, calculateEnvironmentPercent, deviceready, displayError, displayProduct, fetchResult, gotoScreen, listRisks, scan, screenIndex, search, serverWakeUp;

  ENDPOINT = "http://fierce-harbor-8745.herokuapp.com/product";

  SCREEN_WIDTH = 320;

  MAX_INDEX = 80;

  MIN_INDEX = 5;

  MOCK_PRODUCT = {
    "R": "37, 38, 41",
    "_id": "",
    "index": "64.5",
    "product_name": "Kakelfog",
    "desc": "Cementbaserat fogbruk f\u00f6r fogning av keramiska plattor p\u00e5 v\u00e4gg och golv i v\u00e5ta och torra utrymmen. \u00c4ven f\u00f6r utomhusbruk.",
    "content": [
      {
        "ingredient_name": "Cement",
        "percentage": "30-50"
      }, {
        "ingredient_name": "Kalciumkarbonat",
        "percentage": "30-60"
      }
    ],
    "manufacturer": "Kiilto",
    "image_link": "https://dl.dropboxusercontent.com/u/24952358/MVK-bilder/Ny%20mapp/kakelfog.jpg",
    "ean-code": "6411513523100"
  };

  $cached = {};

  screenIndex = 1;

  cacheSelectors = function() {
    return $cached = {
      body: $("body"),
      app: $(".app"),
      home: {
        $: $("#home"),
        scan: $(".scan"),
        search: $(".search")
      },
      product: {
        $: $("#product")
      },
      templates: {
        product: $("#product-template")
      }
    };
  };

  deviceready = function() {
    serverWakeUp();
    $cached.home.scan.on("click", function() {
      $cached.home.scan.addClass("touch");
      return setTimeout(scan, 100);
    });
    $cached.home.search.on("click", function() {
      $cached.home.search.addClass("touch");
      return setTimeout(search, 100);
    });
    return $(document).on("backbutton", function(e) {
      e.preventDefault();
      if (screenIndex === 1) {
        return navigator.app.exitApp();
      } else {
        return gotoScreen({
          index: screenIndex - 1
        });
      }
    });
  };

  scan = function() {
    return window.plugins.barcodeScanner.scan((function(_arg) {
      var cancelled, format, text;
      cancelled = _arg.cancelled, text = _arg.text, format = _arg.format;
      $cached.home.scan.removeClass("touch");
      if (cancelled) {
        return;
      }
      return fetchResult({
        code: text,
        success: (function(result) {
          return displayProduct(result[0]);
        }),
        error: displayError
      });
    }), function(error) {
      return alert("Skanning misslyckades: " + error, function() {});
    });
  };

  search = function() {
    var searchWord;
    searchWord = prompt("Ange s√∂kord");
    $cached.home.search.removeClass("touch");
    if (!searchWord) {
      return;
    }
    return fetchResult({
      name: searchWord,
      success: (function(result) {
        return displayProduct(result[0]);
      }),
      error: displayError
    });
  };

  fetchResult = function(_arg) {
    var code, error, errorCallback, name, params, success;
    name = _arg.name, code = _arg.code, error = _arg.error, success = _arg.success;
    params = {
      name: name,
      ean_code: code
    };
    errorCallback = function() {
      return typeof error === "function" ? error("Produkten hittades inte") : void 0;
    };
    return $.getJSON(ENDPOINT, params).success(function(data) {
      if (!data.result.length) {
        return errorCallback();
      }
      return typeof success === "function" ? success(data.result) : void 0;
    }).error(errorCallback);
  };

  displayProduct = function(product) {
    var environmentPercent, template;
    if (!product) {
      return;
    }
    gotoScreen({
      id: "product"
    });
    template = _.template($cached.templates.product.html());
    environmentPercent = calculateEnvironmentPercent(product.index);
    $cached.product.$.html(template({
      product: product,
      environmentPercent: environmentPercent,
      risks: listRisks(product.R)
    }));
    return _.delay(function() {
      return $(".rating-container .fill").css("width", environmentPercent + "%");
    }, 1000);
  };

  displayError = function(error) {
    return alert(error);
  };

  gotoScreen = function(_arg) {
    var $screen, id, index;
    index = _arg.index, id = _arg.id;
    if (id) {
      $screen = $("#" + id);
      index = $screen.data("index");
    } else if (index) {
      $screen = $("section[data-index=" + index + "]");
    }
    screenIndex = index;
    return $cached.app.transition({
      x: -(index - 1) * SCREEN_WIDTH
    }, 500);
  };

  serverWakeUp = function() {
    return $.get(ENDPOINT);
  };

  calculateEnvironmentPercent = function(index) {
    return 100 - ((index - MIN_INDEX) / (MAX_INDEX - MIN_INDEX)) * 100;
  };

  listRisks = function(rString) {
    if (!rString) {
      return [];
    }
    return _(rString.split(", ")).map(function(item) {
      return RISK_PHRASES[item];
    });
  };

  window.app = {
    initialize: function() {
      cacheSelectors();
      return $(document).on("deviceready", deviceready);
    }
  };

}).call(this);
